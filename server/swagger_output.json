{
  "openapi": "3.1.0",
  "info": {
    "version": "v1.0.0",
    "title": "Personal Project",
    "description": "Error tracking server"
  },
  "servers": [
    {
      "url": "https://handsomelai.shop",
      "description": "Release environment"
    },
    {
      "url": "http://localhost:3000",
      "description": "Testing environment"
    }
  ],
  "paths": {
    "/api/1.0/event": {
      "post": {
        "tags": ["Event"],
        "summary": "Create a new event",
        "description": "",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/errData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "event": {
                          "$ref": "#/components/schemas/event"
                        },
                        "codeBlockResult": {
                          "$ref": "#/components/schemas/codeBlock"
                        },
                        "requestInfoResult": {
                          "$ref": "#/components/schemas/requestInfo"
                        }
                      }
                    },
                    "next_paging": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid page or category",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BadRequest-invalid-value"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {}
    },
    "/api/1.0/sourceMap": {
      "get": {
        "tags": ["Project"],
        "summary": "Search for all product",
        "description": "return a product list in one page (6 product per page)",
        "parameters": [
          {
            "name": "paging",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "next_paging": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error"
            }
          }
        }
      }
    },
    "/api/1.0/projects/{category}": {
      "get": {
        "tags": ["Product"],
        "summary": "Search for products by title",
        "description": "return a product list in one page (6 product per page)",
        "parameters": [
          {
            "name": "paging",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    },
                    "next_paging": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid keyword or page",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BadRequest-invalid-value"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/1.0/projects": {
      "get": {
        "tags": ["Product"],
        "summary": "Search for product by product id",
        "description": "return a specific product",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isUser": {
                      "example": "true"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Product"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid keyword or page",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BadRequest-invalid-value"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/events/{category}": {
      "post": {
        "tags": ["Unused"],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "color": {
                    "example": "any"
                  },
                  "colorName": {
                    "example": "any"
                  },
                  "size": {
                    "example": "any"
                  },
                  "stock": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/signup": {
      "post": {
        "tags": ["User"],
        "summary": "sign up the user account",
        "description": "record the user information in the database, and return JWT token for authentication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "example": "kevin"
                  },
                  "secondName": {
                    "example": "Lee"
                  },
                  "email": {
                    "example": "kevin@gmail.com"
                  },
                  "password": {
                    "example": "5678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sign up successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BadRequest-invalid-value"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/signin": {
      "post": {
        "tags": ["User"],
        "summary": "sign in by the email and password",
        "description": "check the user information in the database, and return JWT token for authentication",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "kevin@gmail.com"
                  },
                  "password": {
                    "example": "5678"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "sign up successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BadRequest-invalid-value"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/profile": {
      "get": {
        "tags": ["User"],
        "summary": "get user information",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/chat/history": {
      "post": {
        "tags": ["User"],
        "summary": "User chat history from chat room",
        "description": "Return a list of chat history based on user ID",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "sendTime": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "isUser": {
                          "type": "boolean"
                        },
                        "content": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: Please provide correct JWT token."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "jwtToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/user/browsingHistory": {
      "get": {
        "tags": ["User"],
        "summary": "get previous browsing products records",
        "description": "return 20 newest records per request",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "records": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BrowsingHistory"
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": ["User"],
        "summary": "delete browsing products records",
        "description": "delete all the records",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "records": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "JWT token error"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/marketing/campaigns": {
      "get": {
        "tags": ["Marketing"],
        "summary": "get campaign information",
        "description": "return a list of campaign object",
        "responses": {
          "200": {
            "description": "success operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "$ref": "#/components/schemas/Campaign"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Unused"],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "productId": {
                    "example": "any"
                  },
                  "story": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/order/checkout": {
      "post": {
        "tags": ["Checkout"],
        "summary": "",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "description": "create a new order",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "integer",
                          "example": 4465123465
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Bad token"
          },
          "403": {
            "description": "Wrong token"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "description": "Credit card prime from tappay, and order information",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "$ref": "#/components/schemas/Order"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "errData": {
        "type": "object",
        "properties": {
          "workspacePath": "/home/ian/appWorkSchool/personal-project/targetProject",
          "message": {
            "type": "string",
            "example": "duplicate key value violates unique constraint 'users_email_key'"
          },
          "stack": {
            "type": "string",
            "example": "error: duplicate key value violates unique constraint 'users_email_key'\\n at /home/ian/appWorkSchool/personal-project/targetProject/node_modules/pg-pool/index.js:45:11\\n at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\\n at async file:///home/ian/appWorkSchool/personal-project/targetProject/app.js:80:17"
          },
          "name": {
            "type": "string",
            "example": "error"
          },
          "timestamp": {
            "type": "string",
            "example": "Wed, 22 Nov 2023 16:37:04 GMT"
          },
          "systemInfo": {
            "type": "object",
            "properties": {
              "osType": {
                "example": "Linux"
              },
              "osRelease": {
                "example": "5.15.133.1-microsoft-standard-WSL2"
              },
              "architecture": {
                "example": "x64"
              },
              "nodeVersion": {
                "example": "v20.9.0"
              },
              "rss": {
                "example": 59977728
              },
              "heapTotal": {
                "example": 10264576
              },
              "heapUsed": {
                "example": 9263912
              },
              "external": {
                "example": 4019830
              },
              "arrayBuffers": {
                "example": 18502
              },
              "uptime": {
                "example": 3513.62
              }
            }
          },
          "requestInfo": {
            "type": "object",
            "properties": {
              "url": {
                "example": "/databaseError"
              },
              "method": {
                "example": "GET"
              },
              "host": {
                "example": "localhost:3001"
              },
              "userAgent": {
                "example": "curl/7.81.0"
              },
              "accept": {
                "example": "*/*"
              }
            }
          }
        }
      },
      "event": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": "40"
          },
          "user_id": {
            "type": "integer",
            "example": 10
          },
          "project_id": {
            "type": "integer",
            "example": 8
          },
          "name": {
            "type": "string",
            "example": "error"
          },
          "status": {
            "type": "string",
            "example": "unhandled"
          },
          "stack": {
            "type": "string",
            "example": "duplicate key value violates unique constraint 'users_email_key'"
          },
          "message": {
            "type": "string",
            "example": "error: duplicate key value violates unique constraint 'users_email_key'\n/app.js:80:17"
          },
          "os_type": {
            "type": "string",
            "example": "Linux"
          },
          "os_release": {
            "type": "string",
            "example": "5.15.133.1-microsoft-standard-WSL2"
          },
          "architecture": {
            "type": "string",
            "example": "x64"
          },
          "version": {
            "type": "integer",
            "example": 60780544
          },
          "mem_rss": {
            "type": "integer",
            "example": 60780544
          },
          "mem_heap_total": {
            "type": "integer",
            "example": 10526720
          },
          "mem_heap_used": {
            "type": "integer",
            "example": 9288760
          },
          "mem_external": {
            "type": "integer",
            "example": 4019870
          },
          "mem_array_buffers": {
            "type": "integer",
            "example": 18502
          },
          "up_time": {
            "type": "integer",
            "example": 1840
          },
          "create_at": {
            "type": "string",
            "example": "2023-11-23T01:51:59.000Z"
          },
          "fingerprints": {
            "type": "string",
            "example": "ocSamefTgvZgUwJDiZjaKzwfTjRwh7NbQwdOWkl1vtc="
          },
          "work_space_path": {
            "type": "string",
            "example": "/home/ian/appWorkSchool/personal-project/targetProject"
          }
        }
      },
      "codeBlock": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 43
          },
          "event_id": {
            "type": "integer",
            "example": 41
          },
          "block": {
            "type": "string",
            "example": "        'Lee',\n        'kevin@gmail.com',\n        'gndgnfgnfmnfghmfgndfgh',\n        'dhdgjfgyhjmgbs',\n      ],\n    };\n    // const res = await pool.query(query1);\n"
          },
          "error_line": {
            "type": "string",
            "example": "const res = await pool.query(query2);"
          },
          "error_column_num": {
            "type": "string",
            "example": 80
          },
          "error_line_num": {
            "type": "integer",
            "example": 17
          },
          "file_name": {
            "type": "string",
            "example": "app.js"
          }
        }
      },
      "requestInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 25
          },
          "url": {
            "type": "string",
            "example": "/databaseError"
          },
          "method": {
            "type": "string",
            "example": "GET"
          },
          "host": {
            "type": "string",
            "example": "/databaseError"
          },
          "useragent": {
            "type": "integer",
            "example": "curl/7.81.0"
          },
          "accept": {
            "type": "integer",
            "example": "*/*"
          },
          "query_paras": {
            "type": "object",
            "properties": {
              "id": 2
            }
          },
          "event_id": {
            "type": "integer",
            "example": 41
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 10
          },
          "email": {
            "type": "string",
            "example": "kevin@gmail.com"
          },
          "first_name": {
            "type": "string",
            "example": "kevin"
          },
          "second_name": {
            "type": "string",
            "example": "Lee"
          },
          "user_key": {
            "type": "string",
            "example": "91741038-2102-4865-97ec-da973f62f601"
          },
          "token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjEwLCJpYXQiOjE3MDA3MDYxODYsImV4cCI6MTcwMDc5MjU4Nn0.NVV-VV1ok9dMsLTBIVYerKLbYje8S9Qtdc0U0AB0MTk"
          }
        }
      },
      "Shop": {
        "type": "object",
        "properties": {
          "id": {
            "example": 161
          },
          "name": {
            "example": "台北車站館前店"
          },
          "lat": {
            "example": "25.045749558028554"
          },
          "lng": {
            "example": "121.51477021384437"
          },
          "address": {
            "example": "121.51477021384437"
          },
          "phone": {
            "example": "(02)2331-5806"
          },
          "open_time": {
            "example": "11:00"
          },
          "close_time": {
            "example": "22:00"
          },
          "stock": {
            "example": 7
          }
        }
      },
      "BadRequest-invalid-value": {
        "type": "string",
        "example": "query[paging]: Invalid value"
      },
      "BadRequest-duplicate-key": {
        "type": "string",
        "example": "Duplicate entry 'ian@gmail.com' for key 'users.email'"
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "description": "Please enter JWT token",
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "Event",
      "description": "API for SDK sending event information to sever"
    },
    {
      "name": "User",
      "description": "API for authentication"
    },
    {
      "name": "Analysis",
      "description": "API for error data analysis"
    },
    {
      "name": "Issue",
      "description": "API for issue page"
    },
    {
      "name": "Project",
      "description": "API for project page"
    }
  ]
}
